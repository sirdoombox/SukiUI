import{_ as e,c as a,o,a4 as s}from"./chunks/framework.3VZE_5ck.js";const g=JSON.parse('{"title":"Dialogs","description":"","frontmatter":{},"headers":[],"relativePath":"documentation/hosts/dialog.md","filePath":"documentation/hosts/dialog.md"}'),t={name:"documentation/hosts/dialog.md"},i=s('<h1 id="dialogs" tabindex="-1">Dialogs <a class="header-anchor" href="#dialogs" aria-label="Permalink to &quot;Dialogs&quot;">â€‹</a></h1><p>SukiUI provides a <a href="./hosts.html">host</a> which can display dialogs easily at any level of your application. As standard we recommend simply using it in <code>SukiWindow.Hosts</code> as this provides the best experience, however dialogs can be localised within whatever context you require.</p><p>The host is designed in such a way as to be MVVM friendly and as long as you have access to the <code>ISukiDialogManager</code> instance used for a given <code>SukiDialogHost</code> you can display dialogs in it.</p>',3),n=[i];function d(c,l,r,h,_,p){return o(),a("div",null,n)}const m=e(t,[["render",d]]);export{g as __pageData,m as default};
